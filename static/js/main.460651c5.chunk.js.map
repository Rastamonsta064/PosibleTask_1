{"version":3,"sources":["redux/actions.js","components/StarsRatingComponent.js","components/ActorLI.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["UPDATE_RATING","RANDOM_RATING","SORT_BY_RATING","GET_ACTORS","sortByRatingAction","type","randomRating","dispatch","updateRating","index","newRating","payload","updateRatingAction","StarsRatingComponent","rating","stars","i","map","star","className","ActorLi","a","setUpdated","updated","isRandomlyRating","useState","setRating","newRate","setNewRate","useDispatch","scope","actorName","role","onClick","value","onChange","e","target","App","actors","useSelector","state","setIsRandomlyRating","useEffect","interval","setInterval","randomIndex","Math","floor","random","length","clearInterval","initialState","store","createStore","action","sort","b","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.460651c5.chunk.js","sourcesContent":["export const UPDATE_RATING = \"UPDATE_RATING\";\nexport const RANDOM_RATING = \"RANDOM_RATING\";\nexport const SORT_BY_RATING = \"SORT_BY_RATING\";\nexport const GET_ACTORS = \"GET_ACTORS\";\n\n\nexport const updateRatingAction = (index, newRating) => ({\n    type: UPDATE_RATING,\n    payload: {index, newRating}\n})\n\nexport const randomRatingAction = () => ({\n    type: RANDOM_RATING\n})\n\nexport const sortByRatingAction = () => ({\n    type: SORT_BY_RATING\n})\n\nexport const getActors = () => ({\n    type: GET_ACTORS\n})\n\n\nexport const randomRating = () => {\n    return (dispatch) => {\n        dispatch(randomRatingAction());\n        dispatch(sortByRatingAction());\n    }\n}\n\nexport const updateRating = (index, newRating) => {\n    return (dispatch) => {\n        dispatch(updateRatingAction(index, newRating));\n        dispatch(sortByRatingAction());\n    }\n}","import React from 'react';\n\nconst StarsRatingComponent = ({rating}) => {\n\n    const stars = [10];\n    for (let i = 0; i < 10; i++) {\n        if(i < rating){\n            stars[i] = true;\n        }else {\n            stars[i] = false;\n        }\n    }\n\n    return (\n        <div>\n            {stars.map((star, index) => {\n                if(star){\n                  return <i key={index} className=\"bi bi-star-fill m-1 text-warning\"></i>\n                } else {\n                    return <i key={index} className={\"bi bi-star m-1 text-warning\"}></i>\n                }\n\n            })}\n        </div>\n    );\n};\n\nexport default StarsRatingComponent;","import React, {useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {updateRating} from \"../redux/actions\";\nimport StarsRatingComponent from \"./StarsRatingComponent\";\n\nconst ActorLi = ({index, a, setUpdated, updated, isRandomlyRating}) => {\n    const [rating, setRating] = useState(false);\n    const [newRate, setNewRate] = useState(0);\n    const dispatch = useDispatch();\n\n    const saveHandler = () => {\n        if (newRate !== 0) {\n            dispatch(updateRating(index, newRate));\n            setRating(false);\n            setUpdated(updated + 1);\n        }\n    }\n\n    const cancelHandler = () => {\n        setRating(false);\n        setUpdated(updated + 1);\n    }\n\n    switch (rating) {\n        case false:\n            return (\n                <tr>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{a.actorName}</td>\n                    <td>{isRandomlyRating ?\n                        <div className=\"spinner-border text-secondary\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        : <StarsRatingComponent rating={a.rating} />}\n                    </td>\n                    <td>{isRandomlyRating ?\n                        <div className=\"spinner-border text-secondary\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        :\n                        <button className=\"btn btn-outline-secondary\" onClick={() => setRating(true)}>Change Rate\n                        </button>\n                    }\n                    </td>\n                </tr>\n            );\n        case true:\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index + 1}</th>\n                    <th>{a.actorName}</th>\n                    <th>Select new Rate:</th>\n                    <th><select value={a.rating} className=\"form-select\" onChange={(e) => setNewRate(e.target.value)}>\n                        <option value={1}>1</option>\n                        <option value={2}>2</option>\n                        <option value={3}>3</option>\n                        <option value={4}>4</option>\n                        <option value={5}>5</option>\n                        <option value={6}>6</option>\n                        <option value={7}>7</option>\n                        <option value={8}>8</option>\n                        <option value={9}>9</option>\n                        <option value={10}>10</option>\n                    </select></th>\n                    <th>\n                        <button className=\"btn btn-outline-secondary mx-1\" onClick={saveHandler}>\n                            <i className=\"bi bi-save-fill\"></i>\n                        </button>\n                        <button className=\"btn btn-outline-secondary\" onClick={cancelHandler}>\n                            <i className=\"bi bi-x-square-fill\"></i>\n                        </button>\n                    </th>\n                </tr>\n            )\n        default:\n            return (\n                <tr>\n                    <th>...loading</th>\n                </tr>\n            )\n    }\n};\n\nexport default ActorLi;","import {useDispatch, useSelector} from \"react-redux\";\nimport ActorLi from \"./components/ActorLI\";\nimport {getActors, randomRating, updateRating} from \"./redux/actions\";\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n\n    const actors = useSelector(state => state);\n    const dispatch = useDispatch();\n    const [updated, setUpdated] = useState(0);\n    const [isRandomlyRating, setIsRandomlyRating] = useState(false);\n\n    useEffect(() => {\n        dispatch(getActors());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    useEffect(() => {\n        let interval = null;\n        if (isRandomlyRating) {\n            interval = setInterval(() => {\n                let randomIndex = Math.floor(Math.random() * actors.length);\n                let randomRating = Math.floor(Math.random() * 10 + 1);\n                dispatch(updateRating(randomIndex, randomRating));\n            }, 300);\n        } else {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isRandomlyRating, dispatch]);\n\n    function randomRatingHandler() {\n        setUpdated(updated + 1);\n        dispatch(randomRating());\n    }\n\n    return (\n        <div className=\"App container bg-secondary bg-opacity-25 rounded\">\n            <nav className=\"navbar navbar-light bg-secondary rounded\">\n                <div className=\"container\">\n                    <h1><i className=\"bi bi-star-fill text-warning\"> Ratings</i></h1>\n                </div>\n            </nav>\n            <div className=\"text-center\">\n                <button className=\"btn btn-outline-secondary m-1\" onClick={randomRatingHandler}>RANDOM RATING ONCE\n                </button>\n                <button className=\"btn btn-outline-secondary m-1\"\n                        onClick={() => setIsRandomlyRating(!isRandomlyRating)}>\n                    {isRandomlyRating ? \"STOP RANDOM RATING\" : \"START RANDOM RATING\"}\n                </button>\n            </div>\n\n            <table className=\"table table-hover\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Rating</th>\n                    <th scope=\"col\">Change</th>\n                </tr>\n                </thead>\n                <tbody>\n                {actors && actors.map((a, index) => {\n                    return <ActorLi\n                        a={a}\n                        key={index}\n                        index={index}\n                        setUpdated={setUpdated}\n                        updated={updated}\n                        isRandomlyRating={isRandomlyRating}\n                    />\n                })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default App;\n","import {GET_ACTORS, RANDOM_RATING, SORT_BY_RATING, UPDATE_RATING} from \"./actions\";\n\nconst initialState = [\n    {actorName: \"Brad Pit\", rating: 1},\n    {actorName: \"Edward Norton\", rating: 1},\n    {actorName: \"Benissio Del Toro\", rating: 1},\n    {actorName: \"Jason Stathem\", rating: 1},\n    {actorName: \"Ray Liotta\", rating: 1},\n    {actorName: \"Will Smith\", rating: 1},\n    {actorName: \"Tommy Lee Jones\", rating: 1},\n    {actorName: \"George Cloney\", rating: 1},\n    {actorName: \"Tcheky Karyo\", rating: 1},\n    {actorName: \"Vincent Cassel\", rating: 1},\n];\n\nexport const reducer = (state = [], action) => {\n    switch (action.type) {\n        case UPDATE_RATING:\n            state[action.payload.index].rating = action.payload.newRating;\n            return state;\n        case RANDOM_RATING:\n            for (let i = 0; i < state.length; i++) {\n                state[i].rating = Math.floor(Math.random() * 10 + 1);\n            }\n            return state;\n        case SORT_BY_RATING:\n            state.sort((a, b) =>\n                (a.rating < b.rating) ? 1 : ((b.rating < a.rating) ? -1 : 0));\n            return state;\n        case GET_ACTORS:\n            return [...initialState];\n        default:\n            return state;\n    }\n}","import {applyMiddleware, createStore} from \"redux\";\nimport {reducer} from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(reducer,applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}