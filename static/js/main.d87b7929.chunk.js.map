{"version":3,"sources":["redux/actions.js","components/ActorLI.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["UPDATE_RATING","RANDOM_RATING","SORT_BY_RATING","sortByRatingAction","type","randomRating","dispatch","updateRating","index","newRating","payload","updateRatingAction","ActorLi","a","setUpdated","updated","useState","rating","setRating","newRate","setNewRate","useDispatch","scope","actorName","className","onClick","onChange","e","target","value","App","actors","useSelector","state","isRandomlyRating","setIsRandomlyRating","useEffect","map","initialState","store","createStore","action","i","length","Math","floor","random","sort","b","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d87b7929.chunk.js","sourcesContent":["export const UPDATE_RATING = \"UPDATE_RATING\";\nexport const RANDOM_RATING = \"RANDOM_RATING\";\nexport const SORT_BY_RATING = \"SORT_BY_RATING\";\n\n\nexport const updateRatingAction = (index, newRating) => ({\n    type: UPDATE_RATING,\n    payload: {index,newRating}\n})\n\nexport const randomRatingAction = () => ({\n    type: RANDOM_RATING\n})\n\nexport const sortByRatingAction = () => ({\n    type: SORT_BY_RATING\n})\n\nexport const randomRating = ()=> {\n    return (dispatch)=> {\n        dispatch(randomRatingAction());\n        dispatch(sortByRatingAction());\n    }\n}\n\nexport const updateRating = (index, newRating)=> {\n    return (dispatch) => {\n        dispatch(updateRatingAction(index, newRating));\n        dispatch(sortByRatingAction());\n    }\n}","import React, {useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {updateRating} from \"../redux/actions\";\n\nconst ActorLi = ({index, a,setUpdated,updated}) => {\n    const [rating, setRating] = useState(false);\n    const [newRate, setNewRate] = useState(0);\n    const dispatch = useDispatch();\n\n    const saveHandler = () => {\n        if(newRate !== 0){\n            dispatch(updateRating(index,newRate));\n            setRating(false);\n            setUpdated(updated+1);\n        }\n    }\n\n    switch (rating) {\n        case false:\n            return (\n            <tr>\n                <th scope=\"row\">{index+1}</th>\n                <td>{a.actorName}</td>\n                <td>{a.rating}</td>\n                <td><button className=\"btn btn-outline-secondary\" onClick={()=>setRating(true)}>Change Rate</button></td>\n            </tr>\n            );\n        case true:\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{index+1}</th>\n                    <th>{a.actorName}</th>\n                    <th>Select new Rate:</th>\n                    <th><select className=\"form-select\" onChange={(e) => setNewRate(e.target.value)}>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                        <option>6</option>\n                        <option>7</option>\n                        <option>8</option>\n                        <option>9</option>\n                        <option>10</option>\n                    </select></th>\n                    <th><button className=\"btn btn-outline-secondary\" onClick={saveHandler}>Save</button></th>\n                </tr>\n            )\n        default:\n            return (\n                <tr><th>...loading</th></tr>\n            )\n    }\n};\n\nexport default ActorLi;","import {useDispatch, useSelector} from \"react-redux\";\nimport ActorLi from \"./components/ActorLI\";\nimport {randomRating} from \"./redux/actions\";\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n\n    const actors = useSelector(state => state);\n    const dispatch = useDispatch();\n    const [updated, setUpdated] = useState(0);\n\n    const [isRandomlyRating, setIsRandomlyRating] = useState(false);\n\n    useEffect(() => {\n    }, [updated]);\n\n\n    function randomRatingHandler() {\n        setUpdated(updated + 1);\n        dispatch(randomRating());\n    }\n\n\n    return (\n        <div className=\"App container\">\n            <nav className=\"navbar navbar-light bg-secondary\">\n                <div className=\"container\">\n                    <h1><i className=\"bi bi-star-fill text-warning\"> Ratings</i></h1>\n                </div>\n            </nav>\n            <div className=\"text-center\">\n                <button className=\"btn btn-outline-secondary m-1\" onClick={randomRatingHandler}>RANDOM RATING ONCE</button>\n                <button className=\"btn btn-outline-secondary m-1\" onClick={() => setIsRandomlyRating(!isRandomlyRating)}>\n                    {isRandomlyRating ? \"STOP RANDOM RATING\" : \"START RANDOM RATING\"}\n                </button>\n            </div>\n\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Rating</th>\n                    <th scope=\"col\">Change</th>\n                </tr>\n                </thead>\n                <tbody>\n                {actors && actors.map((a, index) => {\n                    return <ActorLi a={a} key={index} index={index} setUpdated={setUpdated} updated={updated}/>\n                })}\n                </tbody>\n            </table>\n\n        </div>\n    );\n}\n\nexport default App;\n","import {RANDOM_RATING, SORT_BY_RATING, UPDATE_RATING} from \"./actions\";\n\nconst initialState = [\n    {actorName: \"Brad Pit\",rating:0},\n    {actorName:\"Edward Norton\",rating:0},\n    {actorName:\"Benissio Del Toro\",rating:0},\n    {actorName:\"Jason Stathem\",rating:0},\n    {actorName:\"Ray Liotta\",rating:0},\n    {actorName:\"Will Smith\",rating:0},\n    {actorName:\"Tommy Lee Jones\",rating:0},\n    {actorName:\"George Cloney\",rating:0},\n    {actorName:\"Tcheky Karyo\",rating:0},\n    {actorName:\"Vincent Cassel\",rating:0},\n    ];\n\nexport const reducer = (state = initialState, action) => {\n        switch(action.type){\n            case UPDATE_RATING:\n                state[action.payload.index].rating = action.payload.newRating;\n                return state;\n            case RANDOM_RATING:\n                for (let i = 0; i < state.length; i++) {\n                    state[i].rating = Math.floor(Math.random()*10 + 1);\n                }\n                return state;\n            case SORT_BY_RATING:\n                state.sort((a,b) =>\n                        (a.rating < b.rating) ? 1 : ((b.rating < a.rating) ? -1 : 0));\n                return state;\n            default:\n                return state;\n        }\n}","import {applyMiddleware, createStore} from \"redux\";\nimport {reducer} from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(reducer,applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}